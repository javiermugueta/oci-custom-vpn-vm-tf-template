variable "tenancy_ocid" {default = "..." }
variable "private_key_path" {default = "~/.oci/oci_api_key.pem" }
variable "user_ocid" {default = "o..." }
variable "fingerprint" {default = "..." }
variable "private_key" {default = "..." }
variable "region" {default = "eu-frankfurt-1" }
variable "ssh_public_key" {default = "..." }
variable "ssh_private_key" {default = "..." }
variable "api_public_key" {default = "..." }
variable "compartmentocid" { default = "ocid1....."}
variable "imageshape" { default = "VM.Standard2.1"}
variable "vmimageocid" {default = "ocid1.image.oc1.eu-frankfurt-1.aaaaaaaajqghpxnszpnghz3um66jywaw5q3pudfw5qwwkyu24ef7lcsyjhsq" }
variable "adnumber" {default = "1" }
variable "vpnvcncidr" {default = ""}
variable "myvpnsubnet" {default = "<the subnet encriptions domain in my side, such 10.250.128.0/24>"}
variable "myvpnprivateip"{default = "<the private ip I want the vpn vm to assign to, such as 10.250.128.10>"}
variable "myvpnpublicip"{default = "<assigned on creation, see tf output, change it later>"}
variable "yourvpnprivateip" {default = "<put here the private IP of the rigth peer>"}
variable "yourvpnpublicip" {default = "<put here the public IP assigned by the rigth peer>"}
variable "yournetwork" {default = "<the subnet encriptions domain in right side>"}
variable "role" {default = "left"}
variable "metadata" {default = "IyEvYmluL2Jhc2gKc3VkbyBzdQp5dW0gaW5zdGFsbCBsaWJyZXN3YW4gbHNvZiAteQpmb3IgdnBuIGluIC9wcm9jL3N5cy9uZXQvaXB2NC9jb25mLyo7CmRvIGVjaG8gMCA+ICR2cG4vYWNjZXB0X3JlZGlyZWN0czsKZWNobyAwID4gJHZwbi9zZW5kX3JlZGlyZWN0czsKZG9uZQplY2hvIG5ldC5pcHY0LmlwX2ZvcndhcmQgPSAxID4+IC9ldGMvc3lzY3RsLmNvbmYKZWNobyBuZXQuaXB2NC5jb25mLmFsbC5hY2NlcHRfcmVkaXJlY3RzID0gMCA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQuY29uZi5hbGwuc2VuZF9yZWRpcmVjdHMgPSAwID4+IC9ldGMvc3lzY3RsLmNvbmYKZWNobyBuZXQuaXB2NC50Y3BfbWF4X3N5bl9iYWNrbG9nID0gMTI4MCA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQuaWNtcF9lY2hvX2lnbm9yZV9icm9hZGNhc3RzID0gMSA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQuY29uZi5hbGwuYWNjZXB0X3NvdXJjZV9yb3V0ZSA9IDAgPj4gL2V0Yy9zeXNjdGwuY29uZgplY2hvIG5ldC5pcHY0LmNvbmYuYWxsLmFjY2VwdF9yZWRpcmVjdHMgPSAwID4+IC9ldGMvc3lzY3RsLmNvbmYKZWNobyBuZXQuaXB2NC5jb25mLmFsbC5zZWN1cmVfcmVkaXJlY3RzID0gMCA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQuY29uZi5hbGwubG9nX21hcnRpYW5zID0gMSA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQuY29uZi5kZWZhdWx0LmFjY2VwdF9zb3VyY2Vfcm91dGUgPSAwID4+IC9ldGMvc3lzY3RsLmNvbmYKZWNobyBuZXQuaXB2NC5jb25mLmRlZmF1bHQuYWNjZXB0X3JlZGlyZWN0cyA9IDAgPj4gL2V0Yy9zeXNjdGwuY29uZgplY2hvIG5ldC5pcHY0LmNvbmYuZGVmYXVsdC5zZWN1cmVfcmVkaXJlY3RzID0gMCA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQuaWNtcF9lY2hvX2lnbm9yZV9icm9hZGNhc3RzID0gMSA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQuaWNtcF9pZ25vcmVfYm9ndXNfZXJyb3JfcmVzcG9uc2VzID0gMSA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQudGNwX3N5bmNvb2tpZXMgPSAxID4+IC9ldGMvc3lzY3RsLmNvbmYKZWNobyBuZXQuaXB2NC5jb25mLmFsbC5ycF9maWx0ZXIgPSAxID4+IC9ldGMvc3lzY3RsLmNvbmYKZWNobyBuZXQuaXB2NC5jb25mLmRlZmF1bHQucnBfZmlsdGVyID0gMSA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gbmV0LmlwdjQudGNwX210dV9wcm9iaW5nID0gMSA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gMiA+IC9wcm9jL3N5cy9uZXQvaXB2NC9jb25mL2FsbC9ycF9maWx0ZXIKZWNobyAyID4gL3Byb2Mvc3lzL25ldC9pcHY0L2NvbmYvZGVmYXVsdC9ycF9maWx0ZXIKZWNobyAyID4gL3Byb2Mvc3lzL25ldC9pcHY0L2NvbmYvZXRoMC9ycF9maWx0ZXIKZWNobyAyID4gL3Byb2Mvc3lzL25ldC9pcHY0L2NvbmYvZXRoMS9ycF9maWx0ZXIKZWNobyAyID4gL3Byb2Mvc3lzL25ldC9pcHY0L2NvbmYvZW5zMy9ycF9maWx0ZXIKZWNobyAyID4gL3Byb2Mvc3lzL25ldC9pcHY0L2NvbmYvZW5zNC9ycF9maWx0ZXIKc3lzY3RsIC1wCmlwdGFibGVzIC1QIElOUFVUIEFDQ0VQVAppcHRhYmxlcyAtUCBPVVRQVVQgQUNDRVBUCmlwdGFibGVzIC1QIEZPUldBUkQgQUNDRVBUCmlwdGFibGVzIC1GCnN5c3RlbWN0bCBlbmFibGUgbGlicmVzd2FuIApjYXQgPDxFT0YgPj4gL2V0Yy9pcHNlYy5kL215dnBuLmNvbmYKIAojIHZwbiBjb25mCiMKY29ubiBteXZwbgogIHR5cGU9dHVubmVsCiAgYXV0aGJ5PXNlY3JldAogIHBmcz15ZXMKICBrZXlleGNoYW5nZT1pa2UKICBpa2V2Mj1ubwogICMKICBpa2U9YWVzXzI1Ni1zaGExO21vZHAxMDI0CiAgaWtlbGlmZXRpbWU9ODY0MDAKICAjCiAgcGhhc2UyPWVzcAogIGVzcD1hZXMtc2hhMTttb2RwMTUzNgogIGtleWxpZmU9MzYwMAogICMKICByaWdodG5leHRob3A9JWRlZmF1bHRyb3V0ZQogIGluaXRpYWwtY29udGFjdD15ZXMKICBkcGRkZWxheT0zMAogIGRwZHRpbWVvdXQ9NjAKICBkcGRhY3Rpb249cmVzdGFydAogICMKICAjIHB1dCBvdGhlciB2cG4gc3R1ZmYgaGVyZQogICMKICAjIGxlZnQgYW5kIHJpZ2h0IHN0dWZmCiAgIyBwbGVhc2Ugbm90ZSB0aGF0IHRoZWVzZSB2YWx1ZXMgbXVzdCBoYXZlIGRpZmZlcmVudAogICMgYmVoYXZpb3VyIGRlcGVuZGluZyBvbiBwZWVyCiAgIyBkb24ndCBhc3N1bWUgYW55dGhpbmcgYW5kIGRvdWJsZSBjaGVjayBldmVyeXRoaW5nISEhCiAgbGVmdGlkPTxhc3NpZ25lZCBvbiBjcmVhdGlvbiwgc2VlIHRmIG91dHB1dCwgY2hhbmdlIGl0IGxhdGVyPgogIGxlZnQ9PHRoZSBwcml2YXRlIGlwIEkgd2FudCB0aGUgdnBuIHZtIHRvIGFzc2lnbiB0bywgc3VjaCBhcyAxMC4yNTAuMTI4LjEwPgogIGxlZnRzb3VyY2VpcD08dGhlIHByaXZhdGUgaXAgSSB3YW50IHRoZSB2cG4gdm0gdG8gYXNzaWduIHRvLCBzdWNoIGFzIDEwLjI1MC4xMjguMTA+CiAgbGVmdHN1Ym5ldD08dGhlIHN1Ym5ldCBlbmNyaXB0aW9ucyBkb21haW4gaW4gbXkgc2lkZSwgc3VjaCAxMC4yNTAuMTI4LjAvMjQ+CiAgcmlnaHQ9PHB1dCBoZXJlIHRoZSBwdWJsaWMgSVAgYXNzaWduZWQgYnkgdGhlIHJpZ3RoIHBlZXI+CiAgcmlnaHRpZD08cHV0IGhlcmUgdGhlIHByaXZhdGUgSVAgb2YgdGhlIHJpZ3RoIHBlZXI+CiAgcmlnaHRzdWJuZXQ9PHRoZSBzdWJuZXQgZW5jcmlwdGlvbnMgZG9tYWluIGluIHJpZ2h0IHNpZGU+CiAKRU9GCiAKY2F0IDw8RU9GID4+IC9ldGMvaXBzZWMuZC9teXZwbi5zZWNyZXRzCiAKICA6IFBTSyAiLi4uLi4uLi4uLi4uIgogIDogUFNLICIuLi4uLi4uLi4uLi4iCiAKRU9GCiAKc3lzdGVtY3RsIHJlc3RhcnQgaXBzZWMuc2VydmljZQppcHNlYyBzdGF0dXMKaXBzZWMgYXV0byAtLWFkZCBteXZwbgppcHNlYyBhdXRvIC0tdXAgbXl2cG4KaXBzZWMgc3RhdHVzCg==" }
